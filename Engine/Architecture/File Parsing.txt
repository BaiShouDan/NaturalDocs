
Title: File Parsing
_______________________________________________________________________________

This is a very broad overview and doesn't contain all the necessary details of the process.  Rather, use it as a
framework to get oriented with the code and then delve into the specific areas you need.


Setup:

	File sources are specified by <Project.txt> and/or the command line as managed by <Config.Manager>.
	<Config.Manager.Start()> then converts each one into a <Files.FileSource> to be managed by <Files.Manager>.
	
	<Files.Manager> loads the previous state of all the source files from <Files.nd> and now holds all the file names 
	and IDs as of the last run.
	

Initial Scan:

	Client code calls <Files.FileSource.AddAllFiles()> on each file source which iterates through every file and adds
	it to <Files.Manager>.  If the file was previously unknown or the timestamp has changed, the file is new or changed.
	
	After this process, the client code then iterates through the files to find which ones were deleted and mark them
	as such.
	
	
Parsing:

	Worker threads in the calling code then call <Files.Manager.ClaimChangedFile()> and similar functions.
	If it's a source file, the language for it is retrieved from <Languages.Manager>.  <Languages.Language.Parse()>
	is called, which among other things extracts the comment and code topics in separate stages.  The comment
	topics (or more specifically, <Comments.PossibleDocumentationComments>) are fed to <Comments.Manager>
	for parsing.  The end result from <Languages.Language> is a list of <Topics>.
	
	The worker threads then update <CodeDB.Manager> with the new <Topics>, which is fairly straightforward
	since the comparison logic is encapsulated in <CodeDB.Accessor>.
	
	
Building:

	(this part hasn't been built yet)

	Builders were also created by <Config.Manager>.  They implement <CodeDB.IChangeWatcher> and register
	themselves to be notified of changes.  During the parsing pass, they collect the changes as lists of files that
	need to be rebuilt.  They then update their own documentation with information pulled out of <CodeDB.Manager>.