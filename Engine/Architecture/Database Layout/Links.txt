
Database Table: CodeDB.Links
_______________________________________________________________________________

The table that stores all the links found by Natural Docs.



Group: Columns
_______________________________________________________________________________


Column: LinkID
	
	(SQL Prototype)
		LinkID INTEGER PRIMARY KEY NOT NULL
	(end)
	
	
Column: Type

	(SQL Prototype)
		Type INTEGER NOT NULL
	(end)


Column: Text

	(SQL Prototype)
		Text TEXT NOT NULL
	(end)


Column: Parameters

	(SQL Prototype)
		Parameters TEXT
	(end)


Column: Context

	(SQL Prototype)
		Context TEXT
	(end)


Column: FileID

	(SQL Prototype)
		FileID INTEGER NOT NULL
	(end)


Column: LanguageID

	(SQL Prototype)
		LanguageID INTEGER NOT NULL
	(end)


Column: EndingSymbol

	(SQL Prototype)
		EndingSymbol TEXT NOT NULL
	(end)


Column: TargetTopicID

	(SQL Prototype)
		TargetTopicID INTEGER
	(end)


Column: TargetScore

	(SQL Prototype)
		TargetScore INTEGER
	(end)



Group: Indexes
_______________________________________________________________________________


Index: LinksByID

	(SQL Prototype)
		LinkID INTEGER PRIMARY KEY NOT NULL
	(end)

	Automatically created by LinkID being defined as a primary key.


Index: LinksByProperties

	(SQL Prototype)
		CREATE UNIQUE INDEX LinksByProperties ON Links (FileID, Type, Text, Parameters, Context)
	(end)

	Links that share all these properties are considered the same link as they will always resolve the
	exact same way.  If even one of these is different between two links there's the possibility of them
	resolving differently and they must be treated separately.

	You will never look things up by only some of the columns in this index, so it isn't important to optimize
	the order from that perspective.  However, we can still optimize the index by putting the easy to sort
	numeric columns before the text columns, and the higher cardinality FileID and Text columns before the
	lower cardinality Type and Context columns.


Index: LinksByEndingSymbols

	(SQL Prototype)
		CREATE INDEX LinksByEndingSymbols ON Links (EndingSymbol)
	(end)
