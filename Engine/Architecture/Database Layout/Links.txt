
Database Table: CodeDB.Links
_______________________________________________________________________________

The table that stores all the links found by Natural Docs.



Group: Columns
_______________________________________________________________________________


Column: LinkID
	
	(SQL Prototype)
		LinkID INTEGER PRIMARY KEY NOT NULL
	(end)
	
	
Column: Type

	(SQL Prototype)
		Type INTEGER NOT NULL
	(end)

	The type of link it is.  The value will be from <Engine.Links.LinkType>.


Column: TextOrSymbol

	(SQL Prototype)
		TextOrSymbol TEXT NOT NULL
	(end)

	If this is a Natural Docs link, this will be the plain text of the link.  If this is a type or class parent link, it 
	will be the symbol normalized as a <Symbols.SymbolString>.


Column: ContextID

	(SQL Prototype)
		ContextID INTEGER NOT NULL
	(end)

	The ID of the context the link appears in.


Column: FileID

	(SQL Prototype)
		FileID INTEGER NOT NULL
	(end)


Column: LanguageID

	(SQL Prototype)
		LanguageID INTEGER NOT NULL
	(end)


Column: EndingSymbol

	(SQL Prototype)
		EndingSymbol TEXT NOT NULL
	(end)

	The ending segment of <TextOrSymbol>.  If this is a Natural Docs links, there may be additional ending 
	symbols that apply to this link in <CodeDB.AlternateLinkEndingSymbols>.


Column: TargetTopicID

	(SQL Prototype)
		TargetTopicID INTEGER
	(end)


Column: TargetScore

	(SQL Prototype)
		TargetScore INTEGER
	(end)



Group: Indexes
_______________________________________________________________________________


Index: LinksByID

	(SQL Prototype)
		LinkID INTEGER PRIMARY KEY NOT NULL
	(end)

	Automatically created by LinkID being defined as a primary key.


Index: LinksByProperties

	(SQL Prototype)
		CREATE UNIQUE INDEX LinksByProperties ON Links (FileID, ContextID, Type, LanguageID, TextOrSymbol)
	(end)

	Links that share all these properties are considered the same link as they will always resolve the
	exact same way.  If even one of these is different between two links there's the possibility of them
	resolving differently and they must be treated separately.


Index: LinksByFile

	This is covered by having FileID be the first column in <LinksByProperties>.


Index: LinksByEndingSymbols

	(SQL Prototype)
		CREATE INDEX LinksByEndingSymbols ON Links (EndingSymbol)
	(end)


Index: LinksByTargetTopicID

	(SQL Prototype)
		CREATE INDEX LinksByTargetTopicID ON Links (TargetTopicID)
	(end)
