<?xml version="1.0"?>

<!--
	File: Open.CLI.build
	___________________________________________________________________________

	This is the NAnt build file for the Natural Docs CLI.

	*Important:*  NAnt 0.92 cannot build x86 targets from 64-bit Windows.  Use NAnt 0.91 until
	<Issue 54 at http://github.com/nant/nant/issues/54> is resolved.


	Group: Properties

		You can use "NAnt -D:propertyname=value" to define these properties on the command line.


		Build Property: OutputFolder

			The folder being used for output.  This property must be defined and the folder must already exist.


		Build Property: Platform

			The platform that you are building for, which must be one of the following values:

			Windows - Build for Windows only.
			Unix - Build for Unix, Linux, and Mac OS X.
			Universal - Include files for both Windows and Unix.

			If this property is not defined it defaults to Universal.

-->
<project name="NaturalDocs.CLI" default="BuildAll">



	<!--
		Group: Build Targets
		_______________________________________________________________________
	-->


	<!--
		Build Target: Build
		Compiles the CLI into <OutputFolder> and copies any resources it needs.  Does not include any dependencies.
	-->
	<target name="Build" depends="CheckProperties,CopyResources">

		<csc target="exe" platform="x86" debug="none" optimize="true" output="${OutputFolder}\NaturalDocs.exe" win32icon="Resources\Icons\Application.ico">
			<sources>
				<include name="**\*.cs" />
			</sources>
			<references>
				<include name="${OutputFolder}\NaturalDocs.Engine.dll" />
			</references>
		</csc>

	</target>


	<!--
		Build Target: BuildAll
		Compiles the CLI and all dependencies into <OutputFolder> and copies any resources they need.
	-->
	<target name="BuildAll" depends="BuildDependencies,Build">
	</target>


	<!--
		Build Target: CopyResources
		Copies all resources needed by the CLI into <OutputFolder>.  It does not include the resources of any
		dependencies.
	-->
	<target name="CopyResources" depends="CopyTranslationResources">
	</target>


	<!--
		Build Target: CopyAllResources
		Copies any resources needed by the CLI and all dependencies into <OutputFolder>.
	-->
	<target name="CopyAllResources" depends="CopyDependencyResources,CopyResources">
	</target>



	<!--
		Group: Support Build Targets
		_______________________________________________________________________
	-->

	<!--
		Build Target: CheckProperties
		Makes sure that the <properties> exist and have valid values.
	-->
	<target name="CheckProperties">

		<fail if="${property::exists('OutputFolder')==false}" message="You did not define the OutputFolder property." />
		<fail if="${directory::exists(OutputFolder)==false}" message="OutputFolder ${OutputFolder} does not exist." />
		<echo message="OutputFolder is ${OutputFolder}" />

		<property if="${property::exists('Platform')==false}" name="Platform" value="Universal" />
		<fail if="${Platform != 'Windows' and Platform != 'Unix' and Platform != 'Universal'}" message="${Platform} is not a valid value for Platform.  Use Windows, Unix, or Universal." />
		<echo message="Platform is ${Platform}" />

	</target>


	<!--
		Build Target: BuildDependencies
		Compiles any dependencies the CLI needs into <OutputFolder> and copies any resources they need.
	-->
	<target name="BuildDependencies">
		<property name="DependencyAction" value="BuildAll" />
		<call target="ForEachDependency" />
	</target>


	<!--
		Build Target: CopyDependencyResources
		Copies any resources needed by the CLI's dependencies into <OutputFolder>.
	-->
	<target name="CopyDependencyResources">
		<property name="DependencyAction" value="CopyAllResources" />
		<call target="ForEachDependency" />
	</target>


	<!--
		Build Target: ForEachDependency
		Executes the NAnt build file for each dependency with the DependencyAction property.
	-->
	<target name="ForEachDependency" depends="CheckProperties">

		<fail if="${property::exists('DependencyAction')==false}" message="You cannot call the ForEachDependency target without defining the DependencyAction property." />


		<!-- Engine -->

		<nant buildfile="..\Engine\Engine.build" target="${DependencyAction}" inheritall="false">
			<properties>
				<property name="OutputFolder" value="${OutputFolder}" />
				<property name="Platform" value="${Platform}" />
			</properties>
		</nant>

	</target>


	<!--
		Build Target: CopyTranslationResources
	-->
	<target name="CopyTranslationResources" depends="CheckProperties">
		<copy todir="${OutputFolder}\Translations">
			<fileset basedir="Resources\Translations">
				<include name="**\*" />
			</fileset>
		</copy>
	</target>


</project>
